{"ast":null,"code":"var _jsxFileName = \"/Users/zhangwenhu/Desktop/Playlister_HW4/client/src/auth/index.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport api from './auth-request-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n  GET_LOGGED_IN: \"GET_LOGGED_IN\",\n  LOGIN_USER: \"LOGIN_USER\",\n  LOGOUT_USER: \"LOGOUT_USER\",\n  REGISTER_USER: \"REGISTER_USER\",\n  ERROR: \"ERROR\"\n};\nfunction AuthContextProvider(props) {\n  _s();\n  const [auth, setAuth] = useState({\n    user: null,\n    loggedIn: false\n  });\n  const history = useHistory();\n  useEffect(() => {\n    auth.getLoggedIn();\n  }, []);\n  const authReducer = action => {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case AuthActionType.GET_LOGGED_IN:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn\n          });\n        }\n      case AuthActionType.LOGIN_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true\n          });\n        }\n      case AuthActionType.LOGOUT_USER:\n        {\n          return setAuth({\n            user: null,\n            loggedIn: false\n          });\n        }\n      case AuthActionType.REGISTER_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true\n          });\n        }\n      default:\n        return auth;\n    }\n  };\n  auth.getLoggedIn = async function () {\n    const response = await api.getLoggedIn();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.SET_LOGGED_IN,\n        payload: {\n          loggedIn: response.data.loggedIn,\n          user: response.data.user\n        }\n      });\n    }\n  };\n  auth.registerUser = async function (firstName, lastName, email, password, passwordVerify) {\n    const response = await api.registerUser(firstName, lastName, email, password, passwordVerify);\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.REGISTER_USER,\n        payload: {\n          user: response.data.user\n        }\n      });\n      this.loginUser(email, password);\n    }\n  };\n  auth.loginUser = async function (email, password) {\n    const response = await api.loginUser(email, password);\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGIN_USER,\n        payload: {\n          user: response.data.user\n        }\n      });\n      history.push(\"/\");\n    }\n  };\n  auth.logoutUser = async function () {\n    const response = await api.logoutUser();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGOUT_USER,\n        payload: null\n      });\n      history.push(\"/\");\n    }\n  };\n  auth.getUserInitials = function () {\n    let initials = \"\";\n    if (auth.user) {\n      initials += auth.user.firstName.charAt(0);\n      initials += auth.user.lastName.charAt(0);\n    }\n    console.log(\"user initials: \" + initials);\n    return initials;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthContextProvider, \"GpD44ljWoaxV/5r2+4QPOJ690a4=\", false, function () {\n  return [useHistory];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useHistory","api","AuthContext","console","log","AuthActionType","GET_LOGGED_IN","LOGIN_USER","LOGOUT_USER","REGISTER_USER","ERROR","AuthContextProvider","props","auth","setAuth","user","loggedIn","history","getLoggedIn","authReducer","action","type","payload","response","status","SET_LOGGED_IN","data","registerUser","firstName","lastName","email","password","passwordVerify","loginUser","push","logoutUser","getUserInitials","initials","charAt","children"],"sources":["/Users/zhangwenhu/Desktop/Playlister_HW4/client/src/auth/index.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from './auth-request-api'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    LOGIN_USER: \"LOGIN_USER\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n    REGISTER_USER: \"REGISTER_USER\",\n    ERROR: \"ERROR\"\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn\n                });\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            case AuthActionType.LOGOUT_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false\n                })\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.getLoggedIn = async function () {\n        const response = await api.getLoggedIn();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.SET_LOGGED_IN,\n                payload: {\n                    loggedIn: response.data.loggedIn,\n                    user: response.data.user\n                }\n            });\n        }\n    }\n\n    auth.registerUser = async function(firstName, lastName, email, password, passwordVerify) {\n        const response = await api.registerUser(firstName, lastName, email, password, passwordVerify);      \n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.REGISTER_USER,\n                payload: {\n                    user: response.data.user\n                }\n            })\n            this.loginUser(email, password);\n        }\n    }\n\n    auth.loginUser = async function(email, password) {\n        const response = await api.loginUser(email, password);\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.LOGIN_USER,\n                payload: {\n                    user: response.data.user\n                }\n            })\n            history.push(\"/\");\n        }\n    }\n\n    auth.logoutUser = async function() {\n        const response = await api.logoutUser();\n        if (response.status === 200) {\n            authReducer( {\n                type: AuthActionType.LOGOUT_USER,\n                payload: null\n            })\n            history.push(\"/\");\n        }\n    }\n\n    auth.getUserInitials = function() {\n        let initials = \"\";\n        if (auth.user) {\n            initials += auth.user.firstName.charAt(0);\n            initials += auth.user.lastName.charAt(0);\n        }\n        console.log(\"user initials: \" + initials);\n        return initials;\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };"],"mappings":"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"},"metadata":{},"sourceType":"module"}